
defining get_absolute_url to redirect to profile/login page after creating a user

passworrd validators check
uploading several images ONE BY ONE
updating the uploaded images

sportclubs should change their password in first_login

salons is_confirmed field must be set to False when sportclubs updates them

salons must have a pending filed that when a masteruser told them to change your salon other masterusers
doesn't see that salon in unpublished list


url mapping for commonusers to see salon list

later when a sportclub or a salon is banned all booked money should return to their related users
and inform them with a message or email

delete migrations and makemigrations initially
PYINSTALLER

masterusers should update their pictures and password

for setting price in sessions with sportclub their bank account details must be defined


fixing redirect for superuser required login page




def get_success_url(self):
		slug = self.kwargs['slug']
		return reverse("accounts:profile", kwargs={'slug': slug})

---------------------------------------------------------------------------------------------
when masteruser deletes or banes sth he should send an email of why to the owner

everything that a master user done must be result in a reverse to a profile page because
e.g. we can ban a salon from two ways and they should not endup both in the unconfirmedsalon list

deleting the confirm page for delete and ban and unbaning masterusers via superusers

in front part all delete ban or unbans must be asked for a confirm in a pop up show

prefix for urls for adding the ability to other usages of this website

page for admin profile and settings

time model must be generated daily automatically for 1 year length
